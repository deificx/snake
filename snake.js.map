{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/mousetrap/mousetrap.js","webpack:///./node_modules/eventemitter3/index.js","webpack:///./src/constants.js","webpack:///./src/html.js","webpack:///./src/controls.js","webpack:///./src/game.js","webpack:///./src/snake.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","document","undefined","_REVERSE_MAP","_MAP","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","224","_KEYCODE_MAP","106","107","109","110","111","186","187","188","189","190","191","192","219","220","221","222","_SHIFT_MAP","_SPECIAL_ALIASES","test","navigator","platform","toString","Mousetrap","keys","callback","action","Array","this","_bindMultiple","unbind","trigger","_directMap","reset","_callbacks","stopCallback","e","element","className","indexOf","_belongsTo","ancestor","parentNode","target","composedPath","initialEventTarget","tagName","isContentEditable","handleKey","self","_handleKey","apply","arguments","addKeycodes","init","documentMousetrap","method","charAt","define","_addEvent","type","addEventListener","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","toLowerCase","_isModifier","_pickBestAction","modifiers","_getReverseMap","length","_getKeyInfo","combination","replace","split","_keysFromString","push","targetElement","_resetTimer","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","modifiers1","modifiers2","matches","seq","metaKey","ctrlKey","sort","join","deleteCombo","combo","deleteSequence","splice","_fireCallback","sequence","srcElement","preventDefault","returnValue","_preventDefault","stopPropagation","cancelBubble","_stopPropagation","_handleKeyEvent","keyCode","altKey","_eventModifiers","_bindSequence","_increaseSequence","nextAction","clearTimeout","setTimeout","_callbackAndReset","wrappedCallback","_bindSingle","info","callbacks","maxLevel","processedSequenceCallback","Math","max","ignoreThisKeypress","combinations","has","prefix","Events","EE","fn","context","once","addListener","emitter","event","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","len","removeListener","j","on","removeAllListeners","off","prefixed","UP","DOWN","LEFT","canvas","getElementById","body","style","margin","height","width","offsetWidth","offsetHeight","getContext","constructor","ctx","gridWidth","grid","w","h","round","state","radius","apple","x","y","position","direction","score","snake","wait","cooldown","newGame","randomDir","placeApple","setDir","dir","getState","getScore","floor","random","collision","pos","randomPos","move","same","pop","unshift","from","directionDiff","to","update","dt","assign","a","b","abs","render","offsetX","offsetY","percentage","entering","strokeStyle","moveTo","lineTo","stroke","fillStyle","beginPath","arc","PI","closePath","fill","textWidth","textMarginLeft","time","highScore","now","Date","getTime","fillRect","font","fillText","textHeight","requestAnimationFrame","controls"],"mappings":"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","file":"snake.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\n\nexport const UP = \"UP\";\nexport const RIGHT = \"RIGHT\";\nexport const DOWN = \"DOWN\";\nexport const LEFT = \"LEFT\";\n\nexport const IDLE = \"IDLE\";\nexport const STARTED = \"STARTED\";\nexport const ENDED = \"ENDED\";\n\nexport const COOLDOWN = 250;\nexport const SCORE_CAP = 150;\nexport const SCORE_INCREASE = 10;\n","\"use strict\";\n\nconst canvas = document.getElementById(\"snake\");\n\ndocument.body.style.margin = \"0px\";\ndocument.body.style.height = \"100vh\";\n\ncanvas.width = document.body.offsetWidth;\ncanvas.height = document.body.offsetHeight;\n\nexport default canvas;\n","\"use strict\";\n\nimport { UP, RIGHT, DOWN, LEFT } from \"./constants\";\n\nimport EventEmitter from \"eventemitter3\";\nconst events = new EventEmitter();\n\nimport Mousetrap from \"mousetrap\";\n\nMousetrap.bind(\"up\", () => {\n  events.emit(\"move\", UP);\n});\nMousetrap.bind(\"right\", () => {\n  events.emit(\"move\", RIGHT);\n});\nMousetrap.bind(\"down\", () => {\n  events.emit(\"move\", DOWN);\n});\nMousetrap.bind(\"left\", () => {\n  events.emit(\"move\", LEFT);\n});\nMousetrap.bind(\"enter\", () => {\n  events.emit(\"new_game\");\n});\nMousetrap.bind(\"space\", () => events.emit(\"new_game\"));\n\nexport default events;\n","\"use strict\";\n\nimport { IDLE, ENDED } from \"./constants\";\n\nimport canvas from \"./html.js\";\nimport Snake from \"./snake\";\n\nconst gridWidth = 30;\nconst context = canvas.getContext(\"2d\");\nconst s = new Snake(context, canvas.width, canvas.height, gridWidth);\nconst textMarginLeft = 20;\nconst textHeight = 50;\nconst textWidth = canvas.width - textMarginLeft * 2;\n\nlet highScore = 0;\nlet time;\n\nconst render = () => {\n  const now = new Date().getTime();\n  const dt = now - (time || now);\n  time = now;\n\n  context.fillStyle = \"#eee\";\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  s.update(dt);\n  s.render();\n\n  context.fillStyle = \"#999\";\n  context.font = \"32px sans-serif\";\n  switch (s.getState()) {\n    case IDLE:\n      context.fillText(\n        \"Press return/enter to start a new game\",\n        textMarginLeft,\n        textHeight,\n        textWidth\n      );\n      break;\n\n    case ENDED:\n      context.fillText(\"GAME OVER!\", textMarginLeft, textHeight, textWidth);\n      context.fillText(\n        \"Press return/enter to start a new game\",\n        textMarginLeft,\n        textHeight * 2,\n        textWidth\n      );\n      if (s.getScore() > 0 && s.getScore() >= highScore) {\n        highScore = s.getScore();\n        context.fillText(\n          \"Congratulations, new high score: \" + highScore,\n          textMarginLeft,\n          textHeight * 3, // eslint-disable-line\n          textWidth\n        );\n      } else {\n        context.fillText(\n          \"You scored \" +\n            s.getScore() +\n            \" points. Your high score is \" +\n            highScore,\n          textMarginLeft,\n          textHeight * 3, // eslint-disable-line\n          textWidth\n        );\n      }\n      break;\n\n    default:\n      context.fillText(s.getScore(), textMarginLeft, textHeight, textWidth);\n      requestAnimationFrame(render);\n      break;\n  }\n};\n\nrequestAnimationFrame(render);\n\nimport controls from \"./controls\";\n\ncontrols.on(\"move\", (dir) => {\n  s.setDir(dir);\n});\ncontrols.on(\"new_game\", () => {\n  s.newGame();\n  requestAnimationFrame(render);\n});\n","\"use strict\";\n\nimport {\n\tUP,\n\tRIGHT,\n\tDOWN,\n\tLEFT,\n\tIDLE,\n\tSTARTED,\n\tENDED,\n\tSCORE_CAP,\n\tSCORE_INCREASE,\n\tCOOLDOWN,\n} from './constants';\n\nexport default class Snake {\n\tconstructor(ctx, width, height, gridWidth) {\n\t\tthis.c = ctx;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.grid = {\n\t\t\tw:gridWidth,\n\t\t\th:Math.round(gridWidth / width * height),\n\t\t};\n\t\tthis.state = IDLE;\n\t\tthis.radius = Math.round(width / gridWidth) / 2;\n\n\t\tthis.apple = {\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t};\n\t\tthis.position = {\n\t\t\tx:null,\n\t\t\ty:null,\n\t\t};\n\t\tthis.direction = null;\n\t\tthis.score = 0;\n\n\t\tthis.snake = [];\n\t\tthis.wait = COOLDOWN;\n\t\tthis.cooldown = COOLDOWN;\n\t}\n\n\tnewGame() {\n\t\tthis.snake = [];\n\t\tthis.snake.push({\n\t\t\tx:Math.round(this.grid.w/2),\n\t\t\ty:Math.round(this.grid.h/2),\n\t\t});\n\t\tthis.snake.push(this.snake[0]);\n\t\tthis.snake.push(this.snake[0]);\n\n\t\tthis.position = this.snake[0];\n\t\tthis.randomDir();\n\n\t\tthis.placeApple();\n\n\t\tthis.score = 0;\n\t\tthis.state = STARTED;\n\t\tthis.wait = COOLDOWN;\n\t\tthis.cooldown = COOLDOWN;\n\t}\n\n\tsetDir(dir) {\n\t\tthis.direction = dir;\n\t}\n\n\tgetState() {\n\t\treturn this.state;\n\t}\n\n\tgetScore() {\n\t\treturn this.score;\n\t}\n\n\trandomDir() {\n\t\tvar cases = 3;\n\t\tswitch (Math.floor(Math.random() * cases)) {\n\t\tcase 0:\n\t\t\tthis.direction = UP;\n\t\t\treturn UP;\n\t\tcase 1:\n\t\t\tthis.direction = LEFT;\n\t\t\treturn LEFT;\n\t\tcase 2:\n\t\t\tthis.direction = DOWN;\n\t\t\treturn DOWN;\n\t\tdefault:\n\t\t\tthis.direction = null;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tcollision(pos) {\n\t\tvar i;\n\t\tfor (i = 0; i < this.snake.length; i++) {\n\t\t\tif (pos.x === this.snake[i].x && pos.y === this.snake[i].y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\trandomPos() {\n\t\treturn {\n\t\t\tx: Math.floor(Math.random()*this.grid.w),\n\t\t\ty: Math.floor(Math.random()*this.grid.h),\n\t\t};\n\t}\n\n\tplaceApple() {\n\t\tvar apple = this.randomPos();\n\t\twhile (this.collision(apple)) {\n\t\t\tapple = this.randomPos();\n\t\t}\n\t\tthis.apple = apple;\n\t}\n\n\tmove(move, same) {\n\t\tthis.position = move;\n\t\tif (same) {\n\t\t\tthis.snake.pop();\n\t\t}\n\t\tthis.snake.unshift(move);\n\t\tthis.snake[0].from = this.directionDiff(this.snake[1], this.snake[0]);\n\t\tthis.snake[1].from = this.directionDiff(this.snake[2], this.snake[1]);\n\t\tthis.snake[1].to = this.directionDiff(this.snake[0], this.snake[1]);\n\t}\n\n\tupdate(dt) {\n\t\tvar move = Object.assign({}, this.position);\n\n\t\tthis.wait = this.wait - dt;\n\n\t\tif (this.wait > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wait = this.cooldown;\n\n\t\tswitch (this.direction) {\n\t\tcase UP:\n\t\t\tmove.y = move.y - 1;\n\t\t\tif (move.y < 0) {\n\t\t\t\tmove.y = this.grid.h - 1;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase RIGHT:\n\t\t\tmove.x = move.x + 1;\n\t\t\tif (move.x >= this.grid.w) {\n\t\t\t\tmove.x = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase DOWN:\n\t\t\tmove.y = move.y + 1;\n\t\t\tif (move.y >= this.grid.h) {\n\t\t\t\tmove.y = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase LEFT:\n\t\t\tmove.x = move.x - 1;\n\t\t\tif (move.x < 0) {\n\t\t\t\tmove.x = this.grid.w - 1;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\tif (move.x === this.apple.x && move.y === this.apple.y) {\n\t\t\tthis.score = this.score + SCORE_INCREASE;\n\t\t\tif (this.score < SCORE_CAP) {\n\t\t\t\tthis.cooldown = COOLDOWN - this.score;\n\t\t\t}\n\t\t\tthis.placeApple();\n\t\t\tthis.move(move, false);\n\t\t} else if (this.collision(move)) {\n\t\t\tthis.wait = 0;\n\t\t\tthis.state = ENDED;\n\t\t} else {\n\t\t\tthis.move(move, true);\n\t\t}\n\t}\n\n\tdirectionDiff(a, b) {\n\t\tif (Math.abs(a.x - b.x) > 1 || Math.abs(a.y - b.y) > 1) {\n\t\t\tif (a.x < b.x) {\n\t\t\t\treturn RIGHT;\n\t\t\t} else if (a.x > b.x) {\n\t\t\t\treturn LEFT;\n\t\t\t} else if (a.y < b.y) {\n\t\t\t\treturn DOWN;\n\t\t\t}\n\t\t\treturn UP;\n\t\t} else {\n\t\t\tif (a.x < b.x) {\n\t\t\t\treturn LEFT;\n\t\t\t} else if (a.x > b.x) {\n\t\t\t\treturn RIGHT;\n\t\t\t} else if (a.y < b.y) {\n\t\t\t\treturn UP;\n\t\t\t}\n\t\t\treturn DOWN;\n\t\t}\n\t}\n\n\trender() {\n\t\tvar i;\n\t\tvar percentage = (this.cooldown - this.wait) / this.cooldown * 2;\n\t\tvar entering = this.wait > this.cooldown / 2;\n\t\tvar offsetX;\n\t\tvar offsetY;\n\n\t\tif (this.state === IDLE) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.c.strokeStyle = '#ccc';\n\t\tfor (i = 1; i < this.grid.w; i++) {\n\t\t\tthis.c.moveTo(this.radius * 2 * i, 0);\n\t\t\tthis.c.lineTo(this.radius * 2 * i, this.height);\n\t\t}\n\t\tfor (i = 1; i < this.grid.h; i++) {\n\t\t\tthis.c.moveTo(0, this.radius * 2 * i);\n\t\t\tthis.c.lineTo(this.width, this.radius * 2 * i);\n\t\t}\n\t\tthis.c.stroke();\n\n\t\tthis.c.fillStyle = '#f00';\n\t\tthis.c.beginPath();\n\t\tthis.c.arc(\n\t\t\tthis.apple.x * this.radius * 2 + this.radius,\n\t\t\tthis.apple.y * this.radius * 2 + this.radius,\n\t\t\tthis.radius,\n\t\t\t0,\n\t\t\tMath.PI * 2);\n\t\tthis.c.closePath();\n\t\tthis.c.fill();\n\n\t\tthis.c.fillStyle = '#333';\n\n\t\tfor (i = 0; i < this.snake.length; i++) {\n\t\t\toffsetX = 0;\n\t\t\toffsetY = 0;\n\t\t\tif (entering) {\n\t\t\t\tswitch (this.snake[i].from) {\n\t\t\t\tcase UP:\n\t\t\t\t\toffsetY = this.radius * percentage - this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\tcase DOWN:\n\t\t\t\t\toffsetY = this.radius * percentage * -1 + this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LEFT:\n\t\t\t\t\toffsetX = this.radius * percentage - this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\tcase RIGHT:\n\t\t\t\t\toffsetX = this.radius * percentage * -1 + this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tswitch (this.snake[i].to || this.direction) {\n\t\t\t\tcase UP:\n\t\t\t\t\toffsetY = this.radius * percentage * -1 + this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\tcase DOWN:\n\t\t\t\t\toffsetY = this.radius * percentage - this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LEFT:\n\t\t\t\t\toffsetX = this.radius * percentage * -1 + this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\tcase RIGHT:\n\t\t\t\t\toffsetX = this.radius * percentage - this.radius;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.c.beginPath();\n\t\t\tthis.c.arc(\n\t\t\t\tthis.snake[i].x * this.radius * 2 + offsetX + this.radius,\n\t\t\t\tthis.snake[i].y * this.radius * 2 + offsetY + this.radius,\n\t\t\t\tthis.radius,\n\t\t\t\t0,\n\t\t\t\tMath.PI * 2);\n\t\t\tthis.c.closePath();\n\t\t\tthis.c.fill();\n\t\t}\n\t}\n}\n"],"sourceRoot":""}